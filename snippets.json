{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},

	"Create Functional React Component": {
		"prefix": "fc",
		"body": [
		  "import React from 'react';",
		  "",
		  "function ${1:${TM_FILENAME_BASE}} () {",
		  "    return (",
		  "        <div>",
		  "           ${2} ",
		  "        </div>",
		  "    );",
		  "}",
		  "",
		  "export default ${1:${TM_FILENAME_BASE}};"
		],
		"description": "Create Functional React Component"
	  },

	  "Create React Class Component": {
		"prefix": "rcc",
		"body": [
		  "import React,{Component}  from 'react';",
		  "",
		  "class ${TM_FILENAME_BASE} extends Component {",
		  "    render(){",
		  "        return <div />;",
		  "    };",
		  "};",
		  "",
		  "export default ${TM_FILENAME_BASE};"
		],
		"description": "Create React Class Component"
	  },

	  "Create function": {
		"prefix": "ff",
		"body": [
		  "const ${1} = () => {",
		  "  ${2}",
		  "}"
		],
		"description": "Create function"
	  },
	  "interface": {
		"prefix": "ii",
		"body": [
		  "interface ${1} {",
		  "  ${2}",
		  "}"
		],
		"description": "interface"
	  },
	  "useEffect": {
		"prefix": "ue",
		"body": [
		  "useEffect((${1}) => {",
		  "  ${2}",
		  "},[${3}]);"
		],
		"description": "useEffect"
	  },
	  "useState": {
		"prefix": "us",
		"body": [
		  "const [${1}, ${2}] = React.useState<${3}>(${4});"
		],
		"description": "useState"
	  }
}
